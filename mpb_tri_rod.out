Initializing eigensolver data
Computing 4 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 4 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
11 k-points
  Vector3<0.1, 0.0, 0.0>
  Vector3<0.39, 0.0, 0.0>
  Vector3<0.6799999999999999, 0.0, 0.0>
  Vector3<0.9699999999999999, 0.0, 0.0>
  Vector3<1.26, 0.0, 0.0>
  Vector3<1.55, 0.0, 0.0>
  Vector3<1.8399999999999999, 0.0, 0.0>
  Vector3<2.13, 0.0, 0.0>
  Vector3<2.42, 0.0, 0.0>
  Vector3<2.71, 0.0, 0.0>
  Vector3<3.0, 0.0, 0.0>
elapsed time for initialization: 0.02039933204650879
solve_kpoint (0.1,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 27 iterations.
freqs:, 1, 0.1, 0, 0, 0.1, 0.0794, 0.0849785, 0.297712, 0.374749
elapsed time for k point: 0.6037020683288574
yparity:, 1, -0.9999998081211922, 1.0000000090190242, 0.9999608713397281, -1.0006081486219118
zparity:, 1, 0.9921868124055122, -0.9991288161521066, 0.9326801194593309, 0.8026858883428438
solve_kpoint (0.39,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 13 iterations.
freqs:, 2, 0.39, 0, 0, 0.39, 0.29771, 0.314646, 0.421485, 0.421548
elapsed time for k point: 0.29357242584228516
yparity:, 2, -1.000000108033615, 0.9999999823390647, 1.0009317716891768, -0.9990680567152659
zparity:, 2, 0.8729445302115543, -0.8205661874906093, 0.6357767061065067, 0.8538874385089662
solve_kpoint (0.68,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 18 iterations.
freqs:, 3, 0.68, 0, 0, 0.68, 0.448094, 0.500942, 0.534475, 0.587876
elapsed time for k point: 0.4016742706298828
yparity:, 3, -0.999998805402675, 0.9999997681542551, -1.0000000507438016, 0.9999998727799267
zparity:, 3, 0.9411387673477423, -0.4523119618386649, 0.5385137589502835, -0.1992002325627223
solve_kpoint (0.97,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 36 iterations.
freqs:, 4, 0.97, 0, 0, 0.97, 0.519117, 0.631717, 0.715529, 0.718583
elapsed time for k point: 0.7833199501037598
yparity:, 4, -0.9999989452235956, 0.9999985900660495, 0.9999917175583803, -1.0000052249841005
zparity:, 4, 0.9892327538260525, -0.709715763649636, 0.6755582308417836, 0.21264538404538097
solve_kpoint (1.26,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 19 iterations.
freqs:, 5, 1.26, 0, 0, 1.26, 0.584976, 0.709793, 0.780397, 0.815482
elapsed time for k point: 0.419055700302124
yparity:, 5, -1.0000013574975282, 0.9999983515628773, 0.9999988509475668, -1.0000028668164587
zparity:, 5, 0.9953833495044336, -0.9046516860201268, 0.943382837889499, -0.9590418853286699
solve_kpoint (1.55,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 11 iterations.
freqs:, 6, 1.55, 0, 0, 1.55, 0.653202, 0.773484, 0.835386, 0.875649
elapsed time for k point: 0.2494826316833496
yparity:, 6, -0.9999998846463101, 0.9999989443055713, 1.0000001959686757, -1.0000031499652773
zparity:, 6, 0.9973368137613137, -0.9583762250287701, 0.9807784858798919, -0.9781434645062657
solve_kpoint (1.84,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 11 iterations.
freqs:, 7, 1.84, 0, 0, 1.84, 0.723864, 0.835212, 0.891509, 0.934157
elapsed time for k point: 0.24970436096191406
yparity:, 7, -0.9999994317236078, 0.9999990343269968, 1.0000022688008743, -1.000003074244203
zparity:, 7, 0.9982170785117218, -0.9775989920543829, 0.9914840499307305, -0.9858766346876012
solve_kpoint (2.13,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 11 iterations.
freqs:, 8, 2.13, 0, 0, 2.13, 0.796474, 0.898039, 0.950501, 0.993421
elapsed time for k point: 0.25002336502075195
yparity:, 8, -0.999998706631344, 0.9999991548208393, 1.0000046703419643, -1.0000029261644923
zparity:, 8, 0.998697967530437, -0.9861747036569776, 0.9955682360614113, -0.9900767141941688
solve_kpoint (2.42,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 10 iterations.
freqs:, 9, 2.42, 0, 0, 2.42, 0.870601, 0.962746, 1.01243, 1.05433
elapsed time for k point: 0.2286205291748047
yparity:, 9, -0.9999977684307908, 0.9999992678626747, 1.0000075308503338, -1.0000026243719886
zparity:, 9, 0.9989917930510045, -0.9906132458435062, 0.9974008570389227, -0.9926384826143138
solve_kpoint (2.71,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 10 iterations.
freqs:, 10, 2.71, 0, 0, 2.71, 0.945922, 1.02943, 1.077, 1.11717
elapsed time for k point: 0.22922015190124512
yparity:, 10, -0.9999965008917413, 0.9999994017278082, 1.0000109494188811, -1.0000024323129764
zparity:, 10, 0.9991894999270091, -0.9931768190434314, 0.9983238586838022, -0.9943105716623435
solve_kpoint (3,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 10 iterations.
freqs:, 11, 3, 0, 0, 3, 1.0222, 1.09796, 1.14384, 1.18194
elapsed time for k point: 0.2324388027191162
yparity:, 11, -0.9999950251401688, 0.9999995361443668, 1.000014898657463, -1.0000022018800931
zparity:, 11, 0.9993294853273784, -0.994779439157836, 0.9988313977987882, -0.995458187356468
Band 1 range: 0.07940004835662111 at Vector3<0.1, 0.0, 0.0> to 1.0222042150752901 at Vector3<3.0, 0.0, 0.0>
Band 2 range: 0.08497854055470057 at Vector3<0.1, 0.0, 0.0> to 1.0979641987647593 at Vector3<3.0, 0.0, 0.0>
Band 3 range: 0.2977124573364887 at Vector3<0.1, 0.0, 0.0> to 1.1438437703506634 at Vector3<3.0, 0.0, 0.0>
Band 4 range: 0.3747488209840527 at Vector3<0.1, 0.0, 0.0> to 1.1819362053200808 at Vector3<3.0, 0.0, 0.0>
total elapsed time for run: 3.9664998054504395
done
Initializing fields to random numbers...
Initializing eigensolver data
Computing 4 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 4 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Solving for band polarization: .
1 k-points
  Vector3<6.9, 0.0, 0.0>
elapsed time for initialization: 0.016620874404907227
solve_kpoint (6.9,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 30 iterations.
freqs:, 1, 6.9, 0, 0, 6.9, 2.0937, 2.12033, 2.154, 2.17076
elapsed time for k point: 0.6605861186981201
total elapsed time for run: 0.6773767471313477
done
find-k 4 at 6.9: 0.1707556354992512
Initializing eigensolver data
Computing 4 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 4 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Solving for band polarization: .
1 k-points
  Vector3<6.266820044869155, 0.0, 0.0>
elapsed time for initialization: 0.015369653701782227
solve_kpoint (6.26682,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 9 iterations.
freqs:, 1, 6.26682, 0, 0, 6.26682, 1.91636, 1.94694, 1.98211, 2.00102
elapsed time for k point: 0.209730863571167
total elapsed time for run: 0.22524642944335938
done
find-k 4 at 6.266820044869155: 0.001021847355139105
find-k 3 at 6.266820044869155: -0.017893049397027516 (cached)
Initializing eigensolver data
Computing 3 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 3 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
1 k-points
  Vector3<6.333078278764399, 0.0, 0.0>
elapsed time for initialization: 0.018561840057373047
solve_kpoint (6.33308,0,0):
Solving for bands 1 to 3...
Finished solving for bands 1 to 3 after 42 iterations.
freqs:, 1, 6.33308, 0, 0, 6.33308, 1.93488, 1.96501, 2.00001
elapsed time for k point: 0.6438536643981934
total elapsed time for run: 0.6625692844390869
done
find-k 3 at 6.333078278764399: 1.0713841655185519e-05
find-k 2 at 6.333078278764399: -0.03499288179667981 (cached)
Initializing eigensolver data
Computing 2 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 2 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
1 k-points
  Vector3<6.461350908707016, 0.0, 0.0>
elapsed time for initialization: 0.017203807830810547
solve_kpoint (6.46135,0,0):
Solving for bands 1 to 2...
Finished solving for bands 1 to 2 after 41 iterations.
freqs:, 1, 6.46135, 0, 0, 6.46135, 1.97075, 2.00004
elapsed time for k point: 0.40990304946899414
total elapsed time for run: 0.42725706100463867
done
find-k 2 at 6.461350908707016: 3.6259161064755574e-05
find-k 1 at 6.9: 0.09370000469197626 (cached)
Initializing eigensolver data
Computing 1 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 1 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
1 k-points
  Vector3<6.566191904093887, 0.0, 0.0>
elapsed time for initialization: 0.01598358154296875
solve_kpoint (6.56619,0,0):
Solving for bands 1 to 1...
Finished solving for bands 1 to 1 after 49 iterations.
freqs:, 1, 6.56619, 0, 0, 6.56619, 2.00011
elapsed time for k point: 0.2539832592010498
total elapsed time for run: 0.2701146602630615
done
find-k 1 at 6.566191904093887: 0.00010512558798847493
Initializing eigensolver data
Computing 1 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 1 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Solving for band polarization: .
1 k-points
  Vector3<6.565816536247348, 0.0, 0.0>
elapsed time for initialization: 0.015324115753173828
solve_kpoint (6.56582,0,0):
Solving for bands 1 to 1...
Finished solving for bands 1 to 1 after 1 iterations.
freqs:, 1, 6.56582, 0, 0, 6.56582, 2
elapsed time for k point: 0.0095367431640625
Outputting fields to strip-script--flux.v.k01.b01.x.h5...
yparity:, 1, -1.0004351821517206
velocity:, 1, Vector3<0.2800584794481192, 2.255380965518504e-05, -2.776755451923811e-08>
total elapsed time for run: 0.49616217613220215
done
Initializing eigensolver data
Computing 2 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 2 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
1 k-points
  Vector3<6.461218266602338, 0.0, 0.0>
elapsed time for initialization: 0.016613006591796875
solve_kpoint (6.46122,0,0):
Solving for bands 1 to 2...
Finished solving for bands 1 to 2 after 40 iterations.
freqs:, 1, 6.46122, 0, 0, 6.46122, 1.97072, 2
elapsed time for k point: 0.399702787399292
Outputting fields to strip-script--flux.v.k01.b02.x.h5...
yparity:, 1, -0.9991952654820334, 0.9995911294368252
velocity:, 1, Vector3<0.2798435542117564, -4.3839890886927826e-05, 2.6019909075540878e-05>, Vector3<0.27336115100661645, -1.9823519056638125e-05, -8.1876310839363e-06>
total elapsed time for run: 0.8912904262542725
done
Initializing eigensolver data
Computing 3 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 3 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
1 k-points
  Vector3<6.333038651699638, 0.0, 0.0>
elapsed time for initialization: 0.0173337459564209
solve_kpoint (6.33304,0,0):
Solving for bands 1 to 3...
Finished solving for bands 1 to 3 after 43 iterations.
freqs:, 1, 6.33304, 0, 0, 6.33304, 1.93486, 1.965, 2
elapsed time for k point: 0.6602764129638672
Outputting fields to strip-script--flux.v.k01.b03.x.h5...
yparity:, 1, -0.9999641064606752, 0.9995782080837468, 0.9996275462294673
velocity:, 1, Vector3<0.27957124709025283, -1.8918319549084345e-06, -9.93229460920523e-06>, Vector3<0.272800156306504, -2.102002196749835e-05, 4.243434920306096e-06>, Vector3<0.27036683875444273, -3.942879953902994e-05, 6.347745671469167e-06>
total elapsed time for run: 1.1557798385620117
done
Initializing eigensolver data
Computing 4 bands with 1e-07 tolerance
Working in 3 dimensions.
Grid size is 1 x 128 x 128.
Solving for 4 bands at a time.
Creating Maxwell data...
Mesh size is 3.
Lattice vectors:
     (1, 0, 0)
     (0, 2, 0)
     (0, 0, 2)
Cell volume = 4
Reciprocal lattice vectors (/ 2 pi):
     (1, -0, 0)
     (-0, 0.5, -0)
     (0, -0, 0.5)
Geometric objects:
     block, center = (0,0,0.555)
          size (1e+20,1e+20,0.89)
          axes (1,0,0), (0,1,0), (0,0,1)
     block, center = (0,0,0)
          size (1e+20,0.5,0.22)
          axes (1,0,0), (0,1,0), (0,0,1)
Geometric object tree has depth 2 and 8 object nodes (vs. 2 actual objects)
Initializing epsilon function...
Allocating fields...
Solving for band polarization: .
Initializing fields to random numbers...
1 k-points
  Vector3<6.26298320322819, 0.0, 0.0>
elapsed time for initialization: 0.019364595413208008
solve_kpoint (6.26298,0,0):
Solving for bands 1 to 4...
Finished solving for bands 1 to 4 after 26 iterations.
freqs:, 1, 6.26298, 0, 0, 6.26298, 1.91528, 1.9459, 1.98107, 2
elapsed time for k point: 0.5849277973175049
Outputting fields to strip-script--flux.v.k01.b04.x.h5...
yparity:, 1, -0.9999859876544603, 1.0000590752777765, 1.000187637055055, -1.0001795881299265
velocity:, 1, Vector3<0.2794170924616474, -1.8648130709056403e-06, 6.489500063945624e-06>, Vector3<0.2724831501026206, 4.814021216169967e-06, -4.180682720392332e-06>, Vector3<0.27002856897722166, 1.8994681416669572e-05, -1.4008978331753048e-06>, Vector3<0.2663031840278061, 1.701504039729423e-05, 1.6033762472910317e-05>
total elapsed time for run: 1.0767850875854492
done
kvals:, 2.0, 1, 4, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 6.565816536247348, 6.461218266602338, 6.333038651699638, 6.26298320322819

Elapsed run time = 9.9361 s
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2, band 3, band 4
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2, band 3, band 4
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2, band 3, band 4
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2, band 3
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2
freqs:, k index, k1, k2, k3, kmag/2pi, band 1
freqs:, k index, k1, k2, k3, kmag/2pi, band 1
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2, band 3
freqs:, k index, k1, k2, k3, kmag/2pi, band 1, band 2, band 3, band 4
